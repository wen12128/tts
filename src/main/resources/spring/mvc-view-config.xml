<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for tts's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
    xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view.
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView,
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        <property name="viewResolvers">
        	<list>
        		 <!-- Default viewClass: JSP view -->
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			        <property name="prefix" value="/WEB-INF/pages/"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
			    <!-- Used here for 'xml' and 'atom' views  -->
			    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
        	</list>
        </property>
    </bean>

    <!--
    REST中根据URL后缀自动判定Content-Type及相应的View
    Simple strategy: only path extension is taken into account
    see http://www.mkyong.com/spring-mvc/spring-3-mvc-contentnegotiatingviewresolver-example/
    -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
                <entry key="rss" value="application/rss+xml" />
            </map>
        </property>
    </bean>

    <!-- Renders an Atom feed of the products. Used by the BeanNameViewResolver  -->
    <bean id="products/productList.atom" class="com.tts.web.ProductsAtomView"/>

    <!-- Renders an RSS feed of the products. Used by the BeanNameViewResolver  -->
    <bean id="products/productList.rss" class="com.tts.web.ProductsRssView"/>

    <!--@ResponseBody提供了，这样做会不会影响,待验证-->
    <!-- Renders an JSON of the products. Used by the BeanNameViewResolver  -->
    <bean id="products/productList.json" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>

    <!-- Renders an XML view. Used by the BeanNameViewResolver  -->
    <bean id="products/productList.xml" class="org.springframework.web.servlet.view.xml.MarshallingView">
        <property name="marshaller" ref="marshaller"/>
    </bean>
    <!-- Object-XML mapping declared using annotations inside 'Products' -->
    <oxm:jaxb2-marshaller id="marshaller">
        <oxm:class-to-be-bound name="com.tts.entity.Products"/>
    </oxm:jaxb2-marshaller>
</beans>