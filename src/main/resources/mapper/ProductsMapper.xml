<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tts.dao.ProductsMapper" >
  <resultMap id="BaseResultMap" type="com.tts.entity.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tts.entity.Products" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, time, status, level
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tts_products
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tts_products
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tts.entity.Products" >
    insert into tts_products (id, title, time, 
      status, level, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{level,jdbcType=INTEGER}, #{content,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tts.entity.Products" >
    insert into tts_products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tts.entity.Products" >
    update tts_products
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tts.entity.Products" >
    update tts_products
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      level = #{level,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tts.entity.Products" >
    update tts_products
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>